{"ast":null,"code":"var _jsxFileName = \"/Users/petcubogdan/Desktop/UI-Programare web/src/ReviewList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddReview from \"./AddReview\";\n\n// Dummy data for users\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  id: 1,\n  name: \"John Doe\"\n}, {\n  id: 2,\n  name: \"Jane Smith\"\n}, {\n  id: 3,\n  name: \"Alice Johnson\"\n}];\n\n// Function to get user by user ID\nconst getUserById = userId => users.find(user => user.id === userId);\nconst ReviewList = _ref => {\n  _s();\n  let {\n    movieId\n  } = _ref;\n  const [reviews, setReviews] = useState([]);\n  const [likeCounts, setLikeCounts] = useState({});\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/movies/${movieId}/reviews`);\n        const result = await response.json();\n        const data = result.data; // Accesarea array-ului de review-uri\n\n        setReviews(data);\n        const initialLikeCounts = data.reduce((acc, review) => {\n          acc[review.id] = review.like;\n          return acc;\n        }, {});\n        setLikeCounts(initialLikeCounts);\n      } catch (error) {\n        console.error(\"Error fetching reviews:\", error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  const handleLikeClick = async reviewId => {\n    try {\n      const response = await fetch(`http://localhost:8080/movies/${movieId}/reviews/${reviewId}/like`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: 1 // Assuming the user ID for now\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setLikeCounts(prevState => ({\n        ...prevState,\n        [reviewId]: data.data.like\n      }));\n      setReviews(prevState => prevState.map(review => review.id === reviewId ? {\n        ...review,\n        like: data.data.like\n      } : review));\n    } catch (error) {\n      console.error(\"Error updating like count:\", error);\n    }\n  };\n  const handleAddReview = newReview => {\n    const newReviewId = reviews.length ? reviews[reviews.length - 1].id + 1 : 1;\n    const reviewToAdd = {\n      ...newReview,\n      id: newReviewId,\n      userId: 1,\n      like: 0\n    };\n    setReviews(prevState => [...prevState, reviewToAdd]);\n    setLikeCounts(prevState => ({\n      ...prevState,\n      [newReviewId]: 0\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddReview, {\n      onAddReview: handleAddReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: \"300px\",\n        overflowY: \"scroll\"\n      },\n      children: reviews.map(review => {\n        var _getUserById;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"10px\",\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Message: \", review.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", ((_getUserById = getUserById(review.userId)) === null || _getUserById === void 0 ? void 0 : _getUserById.name) || \"Unknown User\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Likes: \", likeCounts[review.id]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLikeClick(review.id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, review.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewList, \"4HoNyzHXtBO+NuZi0t+5IolNWZ0=\");\n_c = ReviewList;\nexport default ReviewList;\nvar _c;\n$RefreshReg$(_c, \"ReviewList\");","map":{"version":3,"names":["React","useState","useEffect","AddReview","jsxDEV","_jsxDEV","users","id","name","getUserById","userId","find","user","ReviewList","_ref","_s","movieId","reviews","setReviews","likeCounts","setLikeCounts","fetchReviews","response","fetch","result","json","data","initialLikeCounts","reduce","acc","review","like","error","console","handleLikeClick","reviewId","method","headers","body","JSON","stringify","user_id","ok","Error","prevState","map","handleAddReview","newReview","newReviewId","length","reviewToAdd","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddReview","style","maxHeight","overflowY","_getUserById","border","padding","marginBottom","message","onClick","_c","$RefreshReg$"],"sources":["/Users/petcubogdan/Desktop/UI-Programare web/src/ReviewList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AddReview from \"./AddReview\";\n\n// Dummy data for users\nconst users = [\n  { id: 1, name: \"John Doe\" },\n  { id: 2, name: \"Jane Smith\" },\n  { id: 3, name: \"Alice Johnson\" },\n];\n\n// Function to get user by user ID\nconst getUserById = (userId) => users.find((user) => user.id === userId);\n\nconst ReviewList = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [likeCounts, setLikeCounts] = useState({});\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/movies/${movieId}/reviews`\n        );\n        const result = await response.json();\n        const data = result.data; // Accesarea array-ului de review-uri\n\n        setReviews(data);\n        const initialLikeCounts = data.reduce((acc, review) => {\n          acc[review.id] = review.like;\n          return acc;\n        }, {});\n        setLikeCounts(initialLikeCounts);\n      } catch (error) {\n        console.error(\"Error fetching reviews:\", error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  const handleLikeClick = async (reviewId) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/movies/${movieId}/reviews/${reviewId}/like`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            user_id: 1, // Assuming the user ID for now\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n\n      setLikeCounts((prevState) => ({\n        ...prevState,\n        [reviewId]: data.data.like,\n      }));\n\n      setReviews((prevState) =>\n        prevState.map((review) =>\n          review.id === reviewId ? { ...review, like: data.data.like } : review\n        )\n      );\n    } catch (error) {\n      console.error(\"Error updating like count:\", error);\n    }\n  };\n\n  const handleAddReview = (newReview) => {\n    const newReviewId = reviews.length ? reviews[reviews.length - 1].id + 1 : 1;\n    const reviewToAdd = {\n      ...newReview,\n      id: newReviewId,\n      userId: 1,\n      like: 0,\n    };\n    setReviews((prevState) => [...prevState, reviewToAdd]);\n    setLikeCounts((prevState) => ({\n      ...prevState,\n      [newReviewId]: 0,\n    }));\n  };\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <AddReview onAddReview={handleAddReview} />\n      <div style={{ maxHeight: \"300px\", overflowY: \"scroll\" }}>\n        {reviews.map((review) => (\n          <div\n            key={review.id}\n            style={{\n              border: \"1px solid black\",\n              padding: \"10px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <p>Message: {review.message}</p>\n            <p>User: {getUserById(review.userId)?.name || \"Unknown User\"}</p>\n            <p>Likes: {likeCounts[review.id]}</p>\n            <button onClick={() => handleLikeClick(review.id)}>Like</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}