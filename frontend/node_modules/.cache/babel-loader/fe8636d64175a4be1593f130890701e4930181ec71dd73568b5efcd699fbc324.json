{"ast":null,"code":"var _jsxFileName = \"/Users/petcubogdan/Desktop/UI-Programare web/src/ReviewList.js\";\nimport React from \"react\";\n\n// Dummy data for reviews\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reviews = [{\n  id: 1,\n  userId: 1,\n  message: \"Great movie!\",\n  rating: 5\n}, {\n  id: 2,\n  userId: 2,\n  message: \"Could have been better\",\n  rating: 3\n}, {\n  id: 3,\n  userId: 3,\n  message: \"Disappointing...\",\n  rating: 2\n}];\n\n// Dummy data for users\nconst users = [{\n  id: 1,\n  name: \"John Doe\"\n}, {\n  id: 2,\n  name: \"Jane Smith\"\n}, {\n  id: 3,\n  name: \"Alice Johnson\"\n}];\n\n// Function to get user by user ID\nconst getUserById = userId => users.find(user => user.id === userId);\nconst ReviewList = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", review.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", review.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User: \", getUserById(review.userId).name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = ReviewList;\nexport default ReviewList;\nvar _c;\n$RefreshReg$(_c, \"ReviewList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","reviews","id","userId","message","rating","users","name","getUserById","find","user","ReviewList","children","fileName","_jsxFileName","lineNumber","columnNumber","map","review","_c","$RefreshReg$"],"sources":["/Users/petcubogdan/Desktop/UI-Programare web/src/ReviewList.js"],"sourcesContent":["import React from \"react\";\n\n// Dummy data for reviews\nconst reviews = [\n  { id: 1, userId: 1, message: \"Great movie!\", rating: 5 },\n  { id: 2, userId: 2, message: \"Could have been better\", rating: 3 },\n  { id: 3, userId: 3, message: \"Disappointing...\", rating: 2 },\n];\n\n// Dummy data for users\nconst users = [\n  { id: 1, name: \"John Doe\" },\n  { id: 2, name: \"Jane Smith\" },\n  { id: 3, name: \"Alice Johnson\" },\n];\n\n// Function to get user by user ID\nconst getUserById = (userId) => users.find((user) => user.id === userId);\n\nconst ReviewList = () => {\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p>Message: {review.message}</p>\n            <p>Rating: {review.rating}</p>\n            <p>User: {getUserById(review.userId).name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ReviewList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,CACd;EAAEC,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,OAAO,EAAE,cAAc;EAAEC,MAAM,EAAE;AAAE,CAAC,EACxD;EAAEH,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,OAAO,EAAE,wBAAwB;EAAEC,MAAM,EAAE;AAAE,CAAC,EAClE;EAAEH,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,OAAO,EAAE,kBAAkB;EAAEC,MAAM,EAAE;AAAE,CAAC,CAC7D;;AAED;AACA,MAAMC,KAAK,GAAG,CACZ;EAAEJ,EAAE,EAAE,CAAC;EAAEK,IAAI,EAAE;AAAW,CAAC,EAC3B;EAAEL,EAAE,EAAE,CAAC;EAAEK,IAAI,EAAE;AAAa,CAAC,EAC7B;EAAEL,EAAE,EAAE,CAAC;EAAEK,IAAI,EAAE;AAAgB,CAAC,CACjC;;AAED;AACA,MAAMC,WAAW,GAAIL,MAAM,IAAKG,KAAK,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKC,MAAM,CAAC;AAExE,MAAMQ,UAAU,GAAGA,CAAA,KAAM;EACvB,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAChBhB,OAAA;MAAAY,QAAA,EACGX,OAAO,CAACgB,GAAG,CAAEC,MAAM,iBAClBlB,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UAAAY,QAAA,GAAG,WAAS,EAACM,MAAM,CAACd,OAAO;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAChChB,OAAA;UAAAY,QAAA,GAAG,UAAQ,EAACM,MAAM,CAACb,MAAM;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC9BhB,OAAA;UAAAY,QAAA,GAAG,QAAM,EAACJ,WAAW,CAACU,MAAM,CAACf,MAAM,CAAC,CAACI,IAAI;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,GAHvCE,MAAM,CAAChB,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV,CAAC;AAACG,EAAA,GAfIR,UAAU;AAiBhB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}