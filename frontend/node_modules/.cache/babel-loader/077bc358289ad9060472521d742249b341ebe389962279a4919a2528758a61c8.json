{"ast":null,"code":"var _jsxFileName = \"/Users/petcubogdan/Desktop/UI-Programare web/src/Login.js\";\nimport React from \"react\";\nimport LoginButton from \"./LoginButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const handleLoginSuccess = response => {\n    const token = response.credential;\n\n    // Make a POST request to your server with the token\n    fetch(\"https://your-server.com/api/auth/google\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"Server Response:\", data);\n      // Handle server response (e.g., store token, redirect user, etc.)\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  };\n  const handleLoginFailure = response => {\n    console.error(\"Login Failed:\", response);\n    // Handle login failure\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginButton, {\n      onLoginSuccess: handleLoginSuccess,\n      onLoginFailure: handleLoginFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","LoginButton","jsxDEV","_jsxDEV","Login","handleLoginSuccess","response","token","credential","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","error","handleLoginFailure","children","onLoginSuccess","onLoginFailure","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/petcubogdan/Desktop/UI-Programare web/src/Login.js"],"sourcesContent":["import React from \"react\";\nimport LoginButton from \"./LoginButton\";\n\nconst Login = () => {\n  const handleLoginSuccess = (response) => {\n    const token = response.credential;\n\n    // Make a POST request to your server with the token\n    fetch(\"https://your-server.com/api/auth/google\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ token }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Server Response:\", data);\n        // Handle server response (e.g., store token, redirect user, etc.)\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const handleLoginFailure = (response) => {\n    console.error(\"Login Failed:\", response);\n    // Handle login failure\n  };\n\n  return (\n    <div>\n      <LoginButton\n        onLoginSuccess={handleLoginSuccess}\n        onLoginFailure={handleLoginFailure}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;IACvC,MAAMC,KAAK,GAAGD,QAAQ,CAACE,UAAU;;IAEjC;IACAC,KAAK,CAAC,yCAAyC,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP;MAAM,CAAC;IAChC,CAAC,CAAC,CACCQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;MACrC;IACF,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,kBAAkB,GAAIjB,QAAQ,IAAK;IACvCa,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEhB,QAAQ,CAAC;IACxC;EACF,CAAC;;EAED,oBACEH,OAAA;IAAAqB,QAAA,eACErB,OAAA,CAACF,WAAW;MACVwB,cAAc,EAAEpB,kBAAmB;MACnCqB,cAAc,EAAEH;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACnC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACC,EAAA,GAnCI3B,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}