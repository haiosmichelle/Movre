{"ast":null,"code":"var _jsxFileName = \"/Users/petcubogdan/Desktop/UI-Programare web/src/ReviewList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Review from \"./Review\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewList = _ref => {\n  _s();\n  let {\n    movieId\n  } = _ref;\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const token = localStorage.getItem(\"token\"); // Retrieve token from localStorage\n      try {\n        const response = await fetch(`http://localhost:8080/movies/${movieId}/reviews`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}` // Include token in request headers\n          }\n        });\n\n        if (!response.ok) {\n          if (response.status === 401) {\n            throw new Error(\"Unauthorized\");\n          } else {\n            throw new Error(\"Network response was not ok\");\n          }\n        }\n        const data = await response.json();\n        setReviews(data.data || []); // Ensure data is set to an array\n      } catch (error) {\n        console.error(\"Error fetching reviews:\", error);\n        setError(\"Error fetching reviews: \" + error.message);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (reviews.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews available for this movie.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-list\",\n    children: reviews.map(review => /*#__PURE__*/_jsxDEV(Review, {\n      review: review\n    }, review.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewList, \"r1eKGuMBWwesAtEJl7HWB8KGyRw=\");\n_c = ReviewList;\nexport default ReviewList;\nvar _c;\n$RefreshReg$(_c, \"ReviewList\");","map":{"version":3,"names":["React","useEffect","useState","Review","jsxDEV","_jsxDEV","ReviewList","_ref","_s","movieId","reviews","setReviews","error","setError","fetchReviews","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","status","Error","data","json","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","review","id","_c","$RefreshReg$"],"sources":["/Users/petcubogdan/Desktop/UI-Programare web/src/ReviewList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Review from \"./Review\";\n\nconst ReviewList = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      const token = localStorage.getItem(\"token\"); // Retrieve token from localStorage\n      try {\n        const response = await fetch(\n          `http://localhost:8080/movies/${movieId}/reviews`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`, // Include token in request headers\n            },\n          }\n        );\n\n        if (!response.ok) {\n          if (response.status === 401) {\n            throw new Error(\"Unauthorized\");\n          } else {\n            throw new Error(\"Network response was not ok\");\n          }\n        }\n\n        const data = await response.json();\n        setReviews(data.data || []); // Ensure data is set to an array\n      } catch (error) {\n        console.error(\"Error fetching reviews:\", error);\n        setError(\"Error fetching reviews: \" + error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (error) {\n    return <p className=\"error\">{error}</p>;\n  }\n\n  if (reviews.length === 0) {\n    return <p>No reviews available for this movie.</p>;\n  }\n\n  return (\n    <div className=\"review-list\">\n      {reviews.map((review) => (\n        <Review key={review.id} review={review} />\n      ))}\n    </div>\n  );\n};\n\nexport default ReviewList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC7B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC7C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,gCAA+BV,OAAQ,UAAS,EACjD;UACEW,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASP,KAAM,EAAC,CAAE;UACpC;QACF,CAAC,CACF;;QAED,IAAI,CAACG,QAAQ,CAACK,EAAE,EAAE;UAChB,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;YAC3B,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;UACjC,CAAC,MAAM;YACL,MAAM,IAAIA,KAAK,CAAC,6BAA6B,CAAC;UAChD;QACF;QAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;QAClChB,UAAU,CAACe,IAAI,CAACA,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;MAC/B,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdgB,OAAO,CAAChB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CC,QAAQ,CAAC,0BAA0B,GAAGD,KAAK,CAACiB,OAAO,CAAC;MACtD;IACF,CAAC;IAEDf,YAAY,EAAE;EAChB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,IAAIG,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAGyB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EACzC;EAEA,IAAIzB,OAAO,CAAC0B,MAAM,KAAK,CAAC,EAAE;IACxB,oBAAO/B,OAAA;MAAA0B,QAAA,EAAG;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EACpD;EAEA,oBACE9B,OAAA;IAAKyB,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzBrB,OAAO,CAAC2B,GAAG,CAAEC,MAAM,iBAClBjC,OAAA,CAACF,MAAM;MAAiBmC,MAAM,EAAEA;IAAO,GAA1BA,MAAM,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAC3B,EAAA,CArDIF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAuDhB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}