{"ast":null,"code":"var _jsxFileName = \"/Users/petcubogdan/Desktop/UI-Programare web/src/ReviewList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AddReview from \"./AddReview\";\n\n// Dummy data for users\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  id: 1,\n  name: \"John Doe\"\n}, {\n  id: 2,\n  name: \"Jane Smith\"\n}, {\n  id: 3,\n  name: \"Alice Johnson\"\n}];\n\n// Function to get user by user ID\nconst getUserById = userId => users.find(user => user.id === userId);\nconst ReviewList = _ref => {\n  _s();\n  let {\n    movieId\n  } = _ref;\n  const [reviews, setReviews] = useState([]);\n  const [likeCounts, setLikeCounts] = useState({});\n  const [reviewCount, setReviewCount] = useState(5);\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/movies/${movieId}/reviews`);\n        const result = await response.json();\n        const data = result.data; // Accesarea array-ului de review-uri\n\n        setReviews(data);\n        const initialLikeCounts = data.reduce((acc, review) => {\n          acc[review.id] = review.like;\n          return acc;\n        }, {});\n        setLikeCounts(initialLikeCounts);\n      } catch (error) {\n        console.error(\"Error fetching reviews:\", error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  const handleLikeClick = async reviewId => {\n    try {\n      const response = await fetch(`http://localhost:8080/movies/${movieId}/reviews/${reviewId}/like`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: 1 // Assuming the user ID for now\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      setLikeCounts(prevState => ({\n        ...prevState,\n        [reviewId]: data.data.like\n      }));\n      setReviews(prevState => prevState.map(review => review.id === reviewId ? {\n        ...review,\n        like: data.data.like\n      } : review));\n    } catch (error) {\n      console.error(\"Error updating like count:\", error);\n    }\n  };\n  const handleAddReview = async newReview => {\n    try {\n      const response = await fetch(`http://localhost:8080/movies/${movieId}/reviews`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: 1,\n          // user_id prestabilit\n          message: newReview.message,\n          post_date: newReview.post_date\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      const createdReview = data.data;\n      const newReviewId = createdReview.id;\n      setReviewCount(prevCount => prevCount + 1);\n      setReviews(prevState => [...prevState, createdReview]);\n      setLikeCounts(prevState => ({\n        ...prevState,\n        [newReviewId]: 0\n      }));\n    } catch (error) {\n      console.error(\"Error adding review:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddReview, {\n      onAddReview: handleAddReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: \"300px\",\n        overflowY: \"scroll\"\n      },\n      children: reviews.map(review => {\n        var _getUserById;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid black\",\n            padding: \"10px\",\n            marginBottom: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Message: \", review.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"User: \", ((_getUserById = getUserById(review.userId)) === null || _getUserById === void 0 ? void 0 : _getUserById.name) || \"Unknown User\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Likes: \", likeCounts[review.id]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLikeClick(review.id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, review.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewList, \"HxaURdlK8r/IW+KcC4+qM7Tav/Y=\");\n_c = ReviewList;\nexport default ReviewList;\nvar _c;\n$RefreshReg$(_c, \"ReviewList\");","map":{"version":3,"names":["React","useState","useEffect","AddReview","jsxDEV","_jsxDEV","users","id","name","getUserById","userId","find","user","ReviewList","_ref","_s","movieId","reviews","setReviews","likeCounts","setLikeCounts","reviewCount","setReviewCount","fetchReviews","response","fetch","result","json","data","initialLikeCounts","reduce","acc","review","like","error","console","handleLikeClick","reviewId","method","headers","body","JSON","stringify","user_id","ok","Error","prevState","map","handleAddReview","newReview","message","post_date","createdReview","newReviewId","prevCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddReview","style","maxHeight","overflowY","_getUserById","border","padding","marginBottom","onClick","_c","$RefreshReg$"],"sources":["/Users/petcubogdan/Desktop/UI-Programare web/src/ReviewList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AddReview from \"./AddReview\";\n\n// Dummy data for users\nconst users = [\n  { id: 1, name: \"John Doe\" },\n  { id: 2, name: \"Jane Smith\" },\n  { id: 3, name: \"Alice Johnson\" },\n];\n\n// Function to get user by user ID\nconst getUserById = (userId) => users.find((user) => user.id === userId);\n\nconst ReviewList = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [likeCounts, setLikeCounts] = useState({});\n  const [reviewCount, setReviewCount] = useState(5);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/movies/${movieId}/reviews`\n        );\n        const result = await response.json();\n        const data = result.data; // Accesarea array-ului de review-uri\n\n        setReviews(data);\n        const initialLikeCounts = data.reduce((acc, review) => {\n          acc[review.id] = review.like;\n          return acc;\n        }, {});\n        setLikeCounts(initialLikeCounts);\n      } catch (error) {\n        console.error(\"Error fetching reviews:\", error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  const handleLikeClick = async (reviewId) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/movies/${movieId}/reviews/${reviewId}/like`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            user_id: 1, // Assuming the user ID for now\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n\n      setLikeCounts((prevState) => ({\n        ...prevState,\n        [reviewId]: data.data.like,\n      }));\n\n      setReviews((prevState) =>\n        prevState.map((review) =>\n          review.id === reviewId ? { ...review, like: data.data.like } : review\n        )\n      );\n    } catch (error) {\n      console.error(\"Error updating like count:\", error);\n    }\n  };\n\n  const handleAddReview = async (newReview) => {\n    try {\n      const response = await fetch(\n        `http://localhost:8080/movies/${movieId}/reviews`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            user_id: 1, // user_id prestabilit\n            message: newReview.message,\n            post_date: newReview.post_date,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n      const createdReview = data.data;\n\n      const newReviewId = createdReview.id;\n      setReviewCount((prevCount) => prevCount + 1);\n\n      setReviews((prevState) => [...prevState, createdReview]);\n      setLikeCounts((prevState) => ({\n        ...prevState,\n        [newReviewId]: 0,\n      }));\n    } catch (error) {\n      console.error(\"Error adding review:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <AddReview onAddReview={handleAddReview} />\n      <div style={{ maxHeight: \"300px\", overflowY: \"scroll\" }}>\n        {reviews.map((review) => (\n          <div\n            key={review.id}\n            style={{\n              border: \"1px solid black\",\n              padding: \"10px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <p>Message: {review.message}</p>\n            <p>User: {getUserById(review.userId)?.name || \"Unknown User\"}</p>\n            <p>Likes: {likeCounts[review.id]}</p>\n            <button onClick={() => handleLikeClick(review.id)}>Like</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}