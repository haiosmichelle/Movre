{"ast":null,"code":"var _jsxFileName = \"/Users/petcubogdan/Desktop/UI-Programare web/src/AddReview.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddReview = _ref => {\n  _s();\n  let {\n    movieId,\n    onAddReview\n  } = _ref;\n  const [newReview, setNewReview] = useState({\n    message: \"\"\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewReview(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleAddReview = async () => {\n    if (newReview.message) {\n      const token = localStorage.getItem(\"token\");\n      const reviewWithDate = {\n        ...newReview,\n        post_date: new Date().toISOString()\n      };\n      try {\n        const response = await fetch(`http://localhost:8080/movies/${movieId}/reviews`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify(reviewWithDate)\n        });\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        onAddReview(data.review); // Assuming the server response includes the added review\n        setNewReview({\n          message: \"\"\n        });\n      } catch (error) {\n        console.error(\"Error adding review:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid black\",\n      padding: \"10px\",\n      marginTop: \"20px\",\n      marginBottom: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"message\",\n      value: newReview.message,\n      onChange: handleInputChange,\n      placeholder: \"Write your review here\",\n      rows: \"4\",\n      cols: \"50\",\n      style: {\n        width: \"100%\",\n        marginBottom: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddReview,\n      children: \"Add Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AddReview, \"g3hyIvRvhMSE9zImcJmKgQrQqSU=\");\n_c = AddReview;\nexport default AddReview;\nvar _c;\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddReview","_ref","_s","movieId","onAddReview","newReview","setNewReview","message","handleInputChange","e","name","value","target","prevState","handleAddReview","token","localStorage","getItem","reviewWithDate","post_date","Date","toISOString","response","fetch","method","headers","Authorization","body","JSON","stringify","ok","Error","data","json","review","error","console","style","border","padding","marginTop","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","cols","width","onClick","_c","$RefreshReg$"],"sources":["/Users/petcubogdan/Desktop/UI-Programare web/src/AddReview.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst AddReview = ({ movieId, onAddReview }) => {\n  const [newReview, setNewReview] = useState({ message: \"\" });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewReview((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleAddReview = async () => {\n    if (newReview.message) {\n      const token = localStorage.getItem(\"token\");\n      const reviewWithDate = {\n        ...newReview,\n        post_date: new Date().toISOString(),\n      };\n      try {\n        const response = await fetch(\n          `http://localhost:8080/movies/${movieId}/reviews`,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify(reviewWithDate),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n\n        const data = await response.json();\n        onAddReview(data.review); // Assuming the server response includes the added review\n        setNewReview({ message: \"\" });\n      } catch (error) {\n        console.error(\"Error adding review:\", error);\n      }\n    }\n  };\n\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        padding: \"10px\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\",\n      }}\n    >\n      <h3>Add a Review</h3>\n      <textarea\n        name=\"message\"\n        value={newReview.message}\n        onChange={handleInputChange}\n        placeholder=\"Write your review here\"\n        rows=\"4\"\n        cols=\"50\"\n        style={{ width: \"100%\", marginBottom: \"10px\" }}\n      />\n      <button onClick={handleAddReview}>Add Review</button>\n    </div>\n  );\n};\n\nexport default AddReview;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}